name: iOS Build and Test

on:
  push:
    branches: [ "production" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    name: Build and Test
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Build
        run: |
          set -o pipefail && \
          xcodebuild build-for-testing \
            -scheme "Grocery Guru Debug" \
            -project "Grocery Guru.xcodeproj" \
            -destination "platform=iOS Simulator,name=iPhone 16 Pro" \
          | xcbeautify
      - name: Test
        run: |
          set -o pipefail && \
          xcodebuild test-without-building \
            -scheme "Grocery Guru Debug" \
            -project "Grocery Guru.xcodeproj" \
            -destination "platform=iOS Simulator,name=iPhone 16 Pro" \
            -enableCodeCoverage YES \
            -resultBundlePath CoverageResults.xcresult \
          | xcbeautify
      - name: Test Coverage %
        run: |
          COVERAGE_VALUES=$(xcrun xccov view --report CoverageResults.xcresult | grep -Eo '[0-9]+\.[0-9]+%' | tr -d '%' )
          SUM=0
          COUNT=0
          for VALUE in $COVERAGE_VALUES; do
            SUM=$(echo "$SUM + $VALUE" | bc)
            COUNT=$((COUNT + 1))
          done
          if [ $COUNT -gt 0 ]; then
            AVERAGE=$(echo "scale=2; $SUM / $COUNT" | bc)
            echo "Average Test Coverage: $AVERAGE%"
          else
            echo "No coverage data found."
          fi
      - name: Test Coverage per Target
        run: |
          echo "Test Coverage per Target:"
          xcrun xccov view --report CoverageResults.xcresult | grep '%'
        